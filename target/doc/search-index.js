var searchIndex = {};
searchIndex["stack_dst"] = {"doc":"Support for storing dynamically-sized types on the stack","items":[[3,"ValueA","stack_dst","Stack-allocated dynamically sized type",null,null],[3,"StackA","","A fixed-capacity stack that can contain dynamically-sized types",null,null],[11,"new","","Construct a stack-based DST",0,{"inputs":[{"name":"u"}],"output":{"name":"result"}}],[11,"deref","","",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",0,{"inputs":[{"name":"self"}],"output":null}],[11,"drop","","",1,{"inputs":[{"name":"self"}],"output":null}],[11,"default","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Construct a new (empty) stack",1,{"inputs":[],"output":{"name":"stacka"}}],[11,"is_empty","","Tests if the stack is empty",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"push","","Push a value at the top of the stack",1,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"result"}}],[11,"top","","Returns a pointer to the top item on the stack",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"top_mut","","Returns a pointer to the top item on the stack (unique/mutable)",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"pop","","Pop the top item off the stack",1,{"inputs":[{"name":"self"}],"output":null}],[11,"push_str","","Push the contents of a string slice as an item onto the stack",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"push_cloned","","Pushes a set of items (cloning out of the input slice)",1,null],[6,"Value","","Stack-allocated DST (using a default size)",null,null],[8,"DataBuf","","Trait used to represent the data buffer for StackDSTA.",null,null]],"paths":[[3,"ValueA"],[3,"StackA"]]};
initSearch(searchIndex);
